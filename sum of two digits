#include <stdio.h>
#include <stdlib.h>
int sumOfDigits(int n)
{
    int sum = 0;
    while (n > 0)
    {
        sum += n % 10;
        n /= 10;
    }
    return sum;
}
int maxSumOfDigits(int* nums, int size)
{
    int max = -1; 
    int* hash = (int*)malloc(19 * sizeof(int)); 
    for (int i = 0; i < 19; i++)
    {
        hash[i] = -1;
    }
    for (int i = 0; i < size; i++)
    {
        int s = sumOfDigits(nums[i]);
        if (hash[s] != -1)
        {
            if (nums[i] + hash[s] > max)
            {
                max = nums[i] + hash[s];
            }
        }
        if (nums[i] > hash[s])
        {
            hash[s] = nums[i];
        }
    }
    free(hash);
    return max;
}
int main()
{
    int nums[] = {51, 71, 17, 42};
    int size = sizeof(nums) / sizeof(nums[0]);
    printf("The maximum value of nums[i] + nums[j] for the given array is %d\n", maxSumOfDigits(nums, size));
    
    return 0;
}


OUTPUT:
The maximum value of nums[i] + nums[j] for the given array is 93
